 // Place your key bindings in this file to override the defaultsauto[]
[
    // allows navigating through opened windows and panes
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown"
    },

    // not sure about these ones
    {
        "key": "ctrl+f5",
        "command": "python.execInTerminal"
    },
    {
        "key": "ctrl+f5",
        "command": "python.execInTerminal-icon"
    },
    {
        "key": "ctrl+f5",
        "command": "-workbench.action.debug.run"
    },

    // allows to use alt j and k to scroll through intellisense suggestions
    { 
        "key": "alt+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetVisible" 
    }, 
    { 
        "key": "alt+j",                    
        "command": "selectNextSuggestion",
        "when": "suggestWidgetVisible" 
    },
    {
        "key": "shift+alt+d",
        "command": "python.discoverTests"
    },
    {
        "key": "shift+alt+t",
        "command": "python.runtests"
    },
    {
        "key": "shift+alt+z",
        "command": "workbench.action.toggleZenMode"
    },
    {
        "key": "ctrl+k z",
        "command": "-workbench.action.toggleZenMode"
    },
    {
        "key": "shift+alt+x",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "ctrl+shift+f5",
        "command": "-workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+shift+f5",
        "command": "workbench.action.debug.run"
    },
    {
        "key": "ctrl+alt+n",
        "command": "explorer.newFile"
    },
    {
        "key": "shift+alt+meta+i",
        "command": "editor.action.inspectTMScopes"
    },
    {
        "key": "ctrl+f",
        "command": "-settings.action.search",
        "when": "inSettingsEditor"
    },
    {
        "key": "ctrl+f",
        "command": "-repl.action.filter",
        "when": "inDebugRepl && textInputFocus"
    },
    {
        "key": "ctrl+f",
        "command": "-hexdump.searchString",
        "when": "editorLangId == 'hexdump'"
    },
    {
        "key": "ctrl+f",
        "command": "-workbench.action.terminal.focusFind",
        "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+f",
        "command": "-editor.action.extensioneditor.showfind",
        "when": "!editorFocus && activeEditor == 'workbench.editor.extension'"
    },
    {
        "key": "ctrl+f",
        "command": "-editor.action.webvieweditor.showFind",
        "when": "webviewFindWidgetEnabled && !editorFocus && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "ctrl+f",
        "command": "-extension.vim_ctrl+f",
        "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+f",
        "command": "-keybindings.editor.searchKeybindings",
        "when": "inKeybindings"
    },
    {
        "key": "ctrl+f",
        "command": "-notebook.find",
        "when": "notebookEditorFocused || notebookEditorOpen"
    },
    {
        "key": "ctrl+f",
        "command": "-problems.action.focusFilter",
        "when": "focusedView == 'workbench.panel.markers.view'"
    }
]